###########################################################
#   ______  _____  ______  ______ __   __ ______  _____   #
#   |_____]   |   |  ____ |  ____   \_/   |_____]   |	    #
#   |_____] __|__ |_____| |_____|    |    |_____] __|__   #
#												   zshrc                          #
###########################################################

# # environment
# if [ -n "$ZSH_ENV" ]; then source "$ZSH_ENV"; fi

# # per command profiling
# zmodload zsh/zprof

# # per function profiling
# zmodload zsh/datetime
# setopt promptsubst
# PS4='+$EPOCHREALTIME %N:%i'
# exec 3>&2 2> /tmp/zsh_startlog.$$
# setopt xtrace prompt_subst

# $HOME/bin/gnome_theme_monitor &

# aliases
if [ -f "$HOME/.zsh_aliases" ]; then source "$HOME/.zsh_aliases"; fi

# 'command not found' (package suggestion) from `pkgfile`
if [[ -s '/usr/share/doc/pkgfile/command-not-found.zsh' ]]; then
	source '/usr/share/doc/pkgfile/command-not-found.zsh'
else
	echo '`pkgfile` not found, cannot suggest packages'
fi

# bell off
unsetopt BEEP

# disable shell scroll interrupt
stty -ixon

setopt EXTENDED_HISTORY                 # save start time and duration
setopt INC_APPEND_HISTORY               # update history when command is issued
setopt HIST_IGNORE_ALL_DUPS             # hide duplicates in history
setopt HIST_IGNORE_SPACE                # hide commands starting with spaces

# ls_colors
eval "$(dircolors $DOT/shells/themes/dircolors)"

# bash style word (no '/')
autoload -U select-word-style
select-word-style bash

# autocompletion
autoload -Uz compinit promptinit
compinit
promptinit
_comp_options+=(globdots)

# zoxide (place after 'compinit' for completion)
eval "$(zoxide init --cmd cd zsh)"

zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(?)*==94=34}:${(s.:.)LS_COLORS}")'
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' # case insensitive
zstyle ':completion:*' menu selectzmodload                # use menu

# vi mode
bindkey -v
DEFAULT_VI_MODE=viins
KEYTIMEOUT=1
stty erase "^?"
# stty erase "^h"


autoload -U colors && colors

DEFAULT_VI_MODE=viins

# if [ -n "$DOT/shells/zsh/zsh_prompt" ]; then source "$DOT/shells/zsh/zsh_prompt"; fi
# if [ -n "$DOT/shells/zsh/zsh_reload_scheme" ]; then "$DOT/shells/zsh/zsh_reload_scheme"; fi
# zvm_after_init_commands+=('[ -f $DOT/shells/zsh/zsh_reload_scheme ] && source $DOT/shells/zsh/zsh_reload_scheme')

# fix zsh-syntax-highlighting
ZVM_INIT_MODE='sourcing'

# remove underlines for paths
(( ${+ZSH_HIGHLIGHT_STYLES} )) || typeset -A ZSH_HIGHLIGHT_STYLES
ZSH_HIGHLIGHT_STYLES[path]=none
ZSH_HIGHLIGHT_STYLES[path_prefix]=none
# Plugin Sourcer
source "$DOT/shells/zsh/plugins/zsh-pluginsourcer/zsh-pluginsourcer.zsh"
# exec "~/dotfiles/shells/zsh/plugins/zsh-gnome-theme-sync/gnome_theme_monitor.plugin.zsh"

if [ -n "$HOME/.config/onehalf-theme" ] ; then
	scheme=$(cat "$HOME/.config/onehalf-theme")
	# echo "source $scheme"
	source "$scheme"
elif $(type -p "onehalf-dark") ; then
	source onehalf-dark
fi

# insert mode mappings
# bindkey '^p' edit-command-line
bindkey '^b' backward-char
bindkey '^f' forward-char
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^j' history-search-forward
bindkey '^k' history-search-backward
bindkey '^[[B' history-search-forward
bindkey '^[[A' history-search-backward
bindkey '^l' clear-screen
bindkey '^o' expand-or-complete
bindkey '^n' accept-and-infer-next-history
bindkey '^u' backward-kill-word
bindkey '^ ' autosuggest-accept
# ctrl + z to go back to fg/vim (no 'fg' history)
fancy-ctrl-z () {
  if [[ $(jobs) ]]; then
    fg
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z


bindkey '^[h' vi-backward-char
bindkey '^[j' history-search-forward
bindkey '^[k' history-search-backward
bindkey '^[l' vi-forward-char

# complete menu mode mappings
zmodload zsh/complist

bindkey -M menuselect '^[h' vi-backward-char
bindkey -M menuselect '^[j' vi-down-line-or-history
bindkey -M menuselect '^[k' vi-up-line-or-history
bindkey -M menuselect '^[l' vi-forward-char
bindkey -M menuselect '^[y' accept-search
bindkey -M menuselect '^[m' accept-search
bindkey -M menuselect '^y' accept-search
bindkey -M menuselect '^o' reverse-menu-complete

# normal mode mappings
bindkey -a 'H' beginning-of-line
bindkey -a 'L' end-of-line
# FZF_DEFAULT_OPTS=" --color='dark'"
[ -f $DOT/fzf.zsh ] && source $DOT/fzf.zsh
zvm_after_init_commands+=('[ -f $DOT/fzf.zsh ] && source $DOT/fzf.zsh')
zvm_after_init_commands+=('bindkey "^j" history-search-forward')
zvm_after_init_commands+=('bindkey "^k" history-search-backward')
zvm_after_init_commands+=('bindkey "^n" accept-and-infer-next-history')

function mkcd() {
  dir=${@:${#@}}
  mkdir $@ && cd $dir
}

eval "$(fnm env --use-on-cd)"
eval "$(starship init zsh)"
# # per function profiling
# unsetopt xtrace
# exec 2>&3 3>&-

# # per command profiling
# zprof > /tmp/zprof

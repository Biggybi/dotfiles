###########################################################
#   ______  _____  ______  ______ __   __ ______  _____   #
#   |_____]   |   |  ____ |  ____   \_/   |_____]   |	  #
#   |_____] __|__ |_____| |_____|    |    |_____] __|__   #
#												   zshrc  #
###########################################################

# autocompletion
autoload -Uz compinit promptinit
compinit
promptinit

# environment
if [ -n "$ZSH_ENV" ]; then source "$ZSH_ENV"; fi

# aliases
if [ -f "$HOME/.zsh_aliases" ]; then source "$HOME/.zsh_aliases"; fi

# command not found (package suggestion)
if [[ -s '/etc/zsh_command_not_found' ]] then
	source '/etc/zsh_command_not_found'; fi

# bell off
unsetopt BEEP

# Environment variables

export GOPATH=$HOME/bin/go
export PATH=$PATH:~/bin:/usr/lib
PATH+=:~/.npm-global/bin
PATH+=:/home/linuxbrew/.linuxbrew/bin
PATH+=:$GOPATH/bin
PATH+=:~/bin/norminette

export VISUAL=vim
export EDITOR="$VISUAL"
export MANPAGER="vim -M +MANPAGER -"
export BROWSER=firefox
export DOT="$HOME/dotfiles"
export LFT="$HOME/42/libft/"
export HOME_VID="$HOME/Videos"
export HOME_PIC="$HOME/Pictures"
export HOME_GAM="$HOME/Games"
export HOME_DOC="$HOME/Documents"
export HOME_MUS="$HOME/Music"
export HOME_42="$HOME/Work"
export DATAPATH="/media/data/"

# disable shell scroll interrupt
stty -ixon

# history
export HISTFILE=~/.zsh_history
export SAVEHIST=1000000
export HISTSIZE=1000000                 # number of commands in session history
export HISTFILESIZE=1000000             # number of commands in history file
export HISTTIMEFORMAT="[%F %T] "
export HISTIGNORE="&:ls:bg:fg:exit"		# ignore some commands

setopt EXTENDED_HISTORY                 # save start time and duration
setopt INC_APPEND_HISTORY               # update history when command is issued
setopt HIST_IGNORE_ALL_DUPS             # don't save duplicates in history
setopt HIST_IGNORE_SPACE                # don't save commands starting with spaces

# completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' # completion: â€©case insensitive
zstyle ':completion:*' menu selectzmodload                # completion: use menu
setopt no_list_ambiguous                                  # completion: complete then show menu

# vi mode
bindkey -v
KEYTIMEOUT=1

autoload edit-command-line
zle -N edit-command-line

# insert mode mappings
bindkey '^p' edit-command-line
bindkey '^b' backward-char
bindkey '^f' forward-char
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^l' clear-screen
bindkey '^j' history-search-forward
bindkey '^k' history-search-backward
bindkey '^[[B' history-search-forward
bindkey '^[[A' history-search-backward
bindkey '^o' expand-or-complete
bindkey '^n' accept-and-infer-next-history
bindkey '^ ' autosuggest-accept

# bindkey '\Mh' vi-backward-char
# bindkey '\Mj' vi-down-line-or-history
# bindkey '\Ml' vi-forward-char
# bindkey '\Mk' vi-up-line-or-history

# complete menu mode mappings
zmodload zsh/complist
bindkey -M menuselect '^h' vi-backward-char
bindkey -M menuselect '^j' vi-down-line-or-history
bindkey -M menuselect '^l' vi-forward-char
bindkey -M menuselect '^k' vi-up-line-or-history
bindkey -M menuselect '^o' reverse-menu-complete

# normal mode mappings
bindkey -a 'H' beginning-of-line
bindkey -a 'L' end-of-line

autoload -U colors && colors

__get_vi_mode_bottom() {
	local vimstyle
	vimstyle='%{\e[01;01;92m%} > %{\e[0m%}'
	if [ "$KEYMAP" = "vicmd" ]
	then
		vimstyle='%{\e[00;01;93m%} < %{\e[0m%}'
	fi
	print -n -- $vimstyle
}

DEFAULT_VI_MODE=viins

zle-keymap-select() {
	zle reset-prompt
}
zle -N zle-keymap-select

zle-line-init() {
	zle -K $DEFAULT_VI_MODE
}
zle -N zle-line-init

git_branch() {
	git symbolic-ref --short HEAD 2> /dev/null
}

setopt prompt_subst
# autoload -U promptinit
precmd() {
	psvar[1]=$(git_branch)
}

PROMPT=$'\n '
PROMPT+=$'%{\e[01;33;100m%}  %n %{\e[0m%}'  # User
PROMPT+=$'%{\e[01;39;100m%} - %{\e[0m%}'    # Sep
PROMPT+=$'%{\e[01;32;100m%} %M  %{\e[0m%} ' # Host
PROMPT+=$'%{\e[00;01;94m%} %~%{\e[0m%} '    # CWD
PROMPT+=$'%{\e[00;01;95m%}%1v%{\e[0m%} '    # Branch
PROMPT+=$'\t${promt_cmd_info}'
PROMPT+=$'%{$reset_color%}'
PROMPT+=$'\n$(__get_vi_mode_bottom)'
PROMPT+=$'%{$reset_color%}'                 # End

# rprompt

prompt_preexec() {
	prompt_preexec_ms=${(%):-%D{%s%3.}}
}

prompt_precmd() {
	if (( prompt_preexec_ms )); then
		local -ri now_ms=${(%):-%D{%s%3.}}
		local -ri elapsed_ms=$(( now_ms - prompt_preexec_ms ))
		local -ri elapsed_s=$(( elapsed_ms/1000 ))
		local -ri ms=$(( elapsed_ms%1000 ))
		local -ri s=$(( elapsed_s%60))
		local -ri m=$(( (elapsed_s/60)%60 ))
		local -ri h=$(( elapsed_s/3600 ))
		if (( h > 0 )); then
			command_time=${h}h${m}m
		elif (( m > 0 )); then
			command_time=${m}m${s}s
		elif (( s >= 10 )); then
			command_time=${s}.${(l:2::0:)$(( ms/10 ))}s # 12.34s
		elif (( s > 0 )); then
			command_time=${s}.${(l:3::0:)ms}s # 1.234s
		else
			command_time=${ms}ms
		fi
		promt_cmd_info=$' %(?.%{\e[00;01;92m%}[0.%{\e[00;01;91m%}[%?)'\ $'%{\e[00;01;94m%}'${command_time}
		promt_cmd_info+=$'%(?.%{\e[00;01;92m%}.%{\e[00;01;91m%})]'
		unset prompt_preexec_ms
	else
		# Clear previous result when hitting ENTER with no command to execute
		unset promt_cmd_info
	fi
}

setopt nopromptbang prompt{cr,percent,sp,subst}

autoload -Uz add-zsh-hook
add-zsh-hook preexec prompt_preexec
add-zsh-hook precmd prompt_precmd

# Color man pages in `less`
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
	[ -s "$BASE16_SHELL/profile_helper.sh" ] && \
	eval "$("$BASE16_SHELL/profile_helper.sh")"

# Launch base 16 theme
export BASE16_SHELL=$DOT/shells/themes/base16-shell
if [ -d $BASE16_SHELL ]; then
	[ -n "$PS1" ] && \
		[ -s "$BASE16_SHELL/profile_helper.sh" ] && \
		eval "$("$BASE16_SHELL/profile_helper.sh")"
fi

# Plugins
source $DOT/shells/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
bindkey '^ ' autosuggest-accept
source $DOT/shells/zsh/plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh
source $DOT/shells/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
zvm_after_init_commands+=('[ -f $DOT/fzf.zsh ] && source $DOT/fzf.zsh')
zvm_after_init_commands+=('bindkey "^j" history-search-forward')
zvm_after_init_commands+=('bindkey "^k" history-search-backward')
zvm_after_init_commands+=('bindkey "^n" accept-and-infer-next-history')
